{"metadata":{"role":"sampleCode","modules":[{"name":"LoggerLibrary"}],"title":"Getting Started with LoggerLibrary","color":{"standardColorIdentifier":"orange"},"roleHeading":"Sample Code"},"kind":"article","identifier":{"url":"doc:\/\/LoggerLibrary\/documentation\/LoggerLibrary\/GettingStarted","interfaceLanguage":"swift"},"schemaVersion":{"minor":3,"patch":0,"major":0},"hierarchy":{"paths":[["doc:\/\/LoggerLibrary\/documentation\/LoggerLibrary"]]},"abstract":[{"type":"text","text":"Learn how to integrate LoggerLibrary into your Swift project and start logging."}],"seeAlsoSections":[{"title":"Essentials","generated":true,"identifiers":["doc:\/\/LoggerLibrary\/documentation\/LoggerLibrary\/Logger","doc:\/\/LoggerLibrary\/documentation\/LoggerLibrary\/LoggerLevel","doc:\/\/LoggerLibrary\/documentation\/LoggerLibrary\/LoggerDomain"],"anchor":"Essentials"}],"sections":[],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/loggerlibrary\/gettingstarted"]}],"primaryContentSections":[{"kind":"content","content":[{"anchor":"Overview","text":"Overview","type":"heading","level":2},{"inlineContent":[{"identifier":"logo.png","type":"image"}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"This guide walks you through the basics of using LoggerLibrary in your application, from defining domains to choosing the right logger implementation."}],"type":"paragraph"},{"anchor":"Define-Your-Logging-Domains","text":"Define Your Logging Domains","type":"heading","level":2},{"inlineContent":[{"text":"Start by defining the logging domains for your application. Each domain represents a distinct area or subsystem:","type":"text"}],"type":"paragraph"},{"syntax":"swift","type":"codeListing","code":["import LoggerLibrary","","extension LoggerDomain {","    static let network: LoggerDomain = \"Network\"","    static let database: LoggerDomain = \"Database\"","    static let ui: LoggerDomain = \"UI\"","}"]},{"name":"Tip","content":[{"inlineContent":[{"type":"text","text":"Define domains in each module as extensions, allowing the app layer to see all domains and configure logging centrally."}],"type":"paragraph"}],"type":"aside","style":"tip"},{"anchor":"Choose-a-Logger","text":"Choose a Logger","type":"heading","level":2},{"inlineContent":[{"type":"text","text":"LoggerLibrary provides three built-in logger implementations:"}],"type":"paragraph"},{"anchor":"PrintLogger","text":"PrintLogger","type":"heading","level":3},{"inlineContent":[{"text":"Simple console logging with a single log level threshold:","type":"text"}],"type":"paragraph"},{"syntax":"swift","code":["let logger = PrintLogger(logLevel: .info)","","logger.info(.network, \"Request started\")","logger.debug(.network, \"This won't be logged (below .info threshold)\")"],"type":"codeListing"},{"text":"DomainFilteredLogger","anchor":"DomainFilteredLogger","level":3,"type":"heading"},{"inlineContent":[{"text":"Advanced logging with per-domain log level control:","type":"text"}],"type":"paragraph"},{"syntax":"swift","code":["let logger = DomainFilteredLogger(","    defaultLogLevel: .warning,","    domainLogLevels: [","        .network: .debug,    \/\/ Verbose network logs","        .database: .info,    \/\/ Standard database logs","        .ui: .disabled       \/\/ No UI logs","    ]",")","","logger.debug(.network, \"Request headers: \\(headers)\")  \/\/ Logged","logger.info(.database, \"Query executed\")               \/\/ Logged","logger.error(.ui, \"View error\")                        \/\/ Not logged (disabled)"],"type":"codeListing"},{"text":"NoOpLogger","anchor":"NoOpLogger","level":3,"type":"heading"},{"inlineContent":[{"type":"text","text":"Discards all log messages, useful for tests:"}],"type":"paragraph"},{"syntax":"swift","code":["let logger = NoOpLogger()","","logger.error(.network, \"This will be silently discarded\")"],"type":"codeListing"},{"text":"Log Messages","anchor":"Log-Messages","level":2,"type":"heading"},{"inlineContent":[{"type":"text","text":"Use convenience methods for common log levels:"}],"type":"paragraph"},{"syntax":"swift","code":["logger.verbose(.network, \"Detailed trace information\")","logger.debug(.network, \"Debugging information\")","logger.info(.network, \"General information\")","logger.warning(.network, \"Warning condition\")","logger.error(.network, \"Error occurred\")"],"type":"codeListing"},{"inlineContent":[{"text":"Or use the core ","type":"text"},{"code":"log(_:_:_:)","type":"codeVoice"},{"text":" method directly:","type":"text"}],"type":"paragraph"},{"type":"codeListing","code":["logger.log(.info, .network, \"Custom log message\")"],"syntax":"swift"},{"type":"heading","text":"Lazy Evaluation","level":2,"anchor":"Lazy-Evaluation"},{"inlineContent":[{"text":"Message strings use ","type":"text"},{"code":"@autoclosure","type":"codeVoice"},{"text":", ensuring theyâ€™re only evaluated when logged:","type":"text"}],"type":"paragraph"},{"type":"codeListing","code":["\/\/ This expensive operation only runs if the log will be output","logger.debug(.network, \"Response: \\(expensiveJSONFormatting(data))\")"],"syntax":"swift"},{"type":"heading","text":"Module-Level Architecture","level":2,"anchor":"Module-Level-Architecture"},{"inlineContent":[{"type":"text","text":"For modular applications, each module should:"}],"type":"paragraph"},{"type":"orderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Import only "},{"type":"codeVoice","code":"LoggerLibrary"},{"type":"text","text":" (the protocol)"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"Define its own logging domains"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Accept a "},{"type":"codeVoice","code":"Logger"},{"type":"text","text":" as a dependency"}]}]}]},{"type":"codeListing","code":["\/\/ In NetworkingModule","import LoggerLibrary","","extension LoggerDomain {","    static let network: LoggerDomain = \"Network\"","}","","struct NetworkManager {","    let logger: Logger","","    func fetchData() {","        logger.info(.network, \"Fetching data...\")","    }","}"],"syntax":"swift"},{"inlineContent":[{"text":"The app layer provides the concrete logger implementation:","type":"text"}],"type":"paragraph"},{"type":"codeListing","code":["\/\/ In App","import LoggerLibrary","import NetworkingModule","","let logger = DomainFilteredLogger(","    defaultLogLevel: .info,","    domainLogLevels: [.network: .debug]",")","","let networkManager = NetworkManager(logger: logger)"],"syntax":"swift"},{"type":"heading","text":"Next Steps","level":2,"anchor":"Next-Steps"},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"type":"text","text":"Explore "},{"isActive":true,"type":"reference","identifier":"doc:\/\/LoggerLibrary\/documentation\/LoggerLibrary\/ArchitectureGuide"},{"type":"text","text":" for advanced patterns"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Learn about creating custom loggers by conforming to ","type":"text"},{"identifier":"doc:\/\/LoggerLibrary\/documentation\/LoggerLibrary\/Logger","isActive":true,"type":"reference"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"See "},{"type":"reference","isActive":true,"identifier":"doc:\/\/LoggerLibrary\/documentation\/LoggerLibrary\/DomainFilteredLogger"},{"type":"text","text":" for fine-grained control"}],"type":"paragraph"}]}]}]}],"references":{"logo.png":{"identifier":"logo.png","type":"image","alt":"LoggerLibrary","variants":[{"traits":["1x","light"],"url":"\/images\/LoggerLibrary\/logo.png"}]},"doc://LoggerLibrary/documentation/LoggerLibrary/ArchitectureGuide":{"kind":"article","abstract":[{"text":"Understand the protocol-first architecture and how to structure logging in modular applications.","type":"text"}],"role":"article","title":"Architecture Guide","identifier":"doc:\/\/LoggerLibrary\/documentation\/LoggerLibrary\/ArchitectureGuide","url":"\/documentation\/loggerlibrary\/architectureguide","type":"topic"},"doc://LoggerLibrary/documentation/LoggerLibrary/LoggerLevel":{"title":"LoggerLevel","abstract":[{"type":"text","text":"An enumeration representing the various levels of logging supported by a logger instance."}],"navigatorTitle":[{"text":"LoggerLevel","kind":"identifier"}],"role":"symbol","identifier":"doc:\/\/LoggerLibrary\/documentation\/LoggerLibrary\/LoggerLevel","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"LoggerLevel","kind":"identifier"}],"kind":"symbol","type":"topic","url":"\/documentation\/loggerlibrary\/loggerlevel"},"doc://LoggerLibrary/documentation/LoggerLibrary":{"role":"collection","title":"LoggerLibrary","abstract":[{"text":"A lightweight, flexible logging framework with domain-based filtering for Swift applications.","type":"text"}],"type":"topic","identifier":"doc:\/\/LoggerLibrary\/documentation\/LoggerLibrary","kind":"symbol","url":"\/documentation\/loggerlibrary"},"doc://LoggerLibrary/documentation/LoggerLibrary/Logger":{"kind":"symbol","type":"topic","url":"\/documentation\/loggerlibrary\/logger","identifier":"doc:\/\/LoggerLibrary\/documentation\/LoggerLibrary\/Logger","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Logger","kind":"identifier"}],"role":"symbol","abstract":[{"text":"An protocol for writing interpolated string messages to the unified logging system.","type":"text"},{"text":" ","type":"text"},{"text":"corresponding to a log level.","type":"text"}],"navigatorTitle":[{"text":"Logger","kind":"identifier"}],"title":"Logger"},"doc://LoggerLibrary/documentation/LoggerLibrary/LoggerDomain":{"navigatorTitle":[{"kind":"identifier","text":"LoggerDomain"}],"kind":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"LoggerDomain"}],"type":"topic","identifier":"doc:\/\/LoggerLibrary\/documentation\/LoggerLibrary\/LoggerDomain","title":"LoggerDomain","url":"\/documentation\/loggerlibrary\/loggerdomain","role":"symbol","abstract":[{"text":"The domain shared by the logs originating from the same ","type":"text"},{"identifier":"doc:\/\/LoggerLibrary\/documentation\/LoggerLibrary\/Logger","type":"reference","isActive":true},{"text":".","type":"text"}]},"doc://LoggerLibrary/documentation/LoggerLibrary/DomainFilteredLogger":{"navigatorTitle":[{"text":"DomainFilteredLogger","kind":"identifier"}],"abstract":[{"type":"text","text":"A logger that outputs messages to the console with per-domain log level configuration."}],"title":"DomainFilteredLogger","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"DomainFilteredLogger","kind":"identifier"}],"kind":"symbol","identifier":"doc:\/\/LoggerLibrary\/documentation\/LoggerLibrary\/DomainFilteredLogger","type":"topic","url":"\/documentation\/loggerlibrary\/domainfilteredlogger","role":"symbol"}}}
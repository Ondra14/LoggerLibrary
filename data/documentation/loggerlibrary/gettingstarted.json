{"hierarchy":{"paths":[["doc:\/\/LoggerLibrary\/documentation\/LoggerLibrary"]]},"variants":[{"paths":["\/documentation\/loggerlibrary\/gettingstarted"],"traits":[{"interfaceLanguage":"swift"}]}],"primaryContentSections":[{"content":[{"level":2,"text":"Overview","type":"heading","anchor":"Overview"},{"type":"paragraph","inlineContent":[{"type":"image","identifier":"logo.png"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"This guide walks you through the basics of using LoggerLibrary in your application, from defining domains to choosing the right logger implementation."}]},{"level":2,"text":"Define Your Logging Domains","type":"heading","anchor":"Define-Your-Logging-Domains"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Start by defining the logging domains for your application. Each domain represents a distinct area or subsystem:"}]},{"type":"codeListing","code":["import LoggerLibrary","","extension LoggerDomain {","    static let network: LoggerDomain = \"Network\"","    static let database: LoggerDomain = \"Database\"","    static let ui: LoggerDomain = \"UI\"","}"],"syntax":"swift"},{"style":"tip","type":"aside","name":"Tip","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Define domains in each module as extensions, allowing the app layer to see all domains and configure logging centrally."}]}]},{"level":2,"text":"Choose a Logger","type":"heading","anchor":"Choose-a-Logger"},{"type":"paragraph","inlineContent":[{"type":"text","text":"LoggerLibrary provides three built-in logger implementations:"}]},{"level":3,"text":"PrintLogger","type":"heading","anchor":"PrintLogger"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Simple console logging with a single log level threshold:"}]},{"syntax":"swift","type":"codeListing","code":["let logger = PrintLogger(logLevel: .info)","","logger.info(.network, \"Request started\")","logger.debug(.network, \"This won't be logged (below .info threshold)\")"]},{"text":"DomainFilteredLogger","type":"heading","level":3,"anchor":"DomainFilteredLogger"},{"inlineContent":[{"text":"Advanced logging with per-domain log level control:","type":"text"}],"type":"paragraph"},{"syntax":"swift","type":"codeListing","code":["let logger = DomainFilteredLogger(","    defaultLogLevel: .warning,","    domainLogLevels: [","        .network: .debug,    \/\/ Verbose network logs","        .database: .info,    \/\/ Standard database logs","        .ui: .disabled       \/\/ No UI logs","    ]",")","","logger.debug(.network, \"Request headers: \\(headers)\")  \/\/ Logged","logger.info(.database, \"Query executed\")               \/\/ Logged","logger.error(.ui, \"View error\")                        \/\/ Not logged (disabled)"]},{"text":"NoOpLogger","type":"heading","level":3,"anchor":"NoOpLogger"},{"inlineContent":[{"text":"Discards all log messages, useful for tests:","type":"text"}],"type":"paragraph"},{"syntax":"swift","type":"codeListing","code":["let logger = NoOpLogger()","","logger.error(.network, \"This will be silently discarded\")"]},{"text":"Log Messages","type":"heading","level":2,"anchor":"Log-Messages"},{"inlineContent":[{"type":"text","text":"Use convenience methods for common log levels:"}],"type":"paragraph"},{"syntax":"swift","type":"codeListing","code":["logger.verbose(.network, \"Detailed trace information\")","logger.debug(.network, \"Debugging information\")","logger.info(.network, \"General information\")","logger.warning(.network, \"Warning condition\")","logger.error(.network, \"Error occurred\")"]},{"inlineContent":[{"text":"Or use the core ","type":"text"},{"type":"codeVoice","code":"log(_:_:_:)"},{"text":" method directly:","type":"text"}],"type":"paragraph"},{"type":"codeListing","syntax":"swift","code":["logger.log(.info, .network, \"Custom log message\")"]},{"anchor":"Lazy-Evaluation","type":"heading","level":2,"text":"Lazy Evaluation"},{"inlineContent":[{"text":"Message strings use ","type":"text"},{"type":"codeVoice","code":"@autoclosure"},{"text":", ensuring theyâ€™re only evaluated when logged:","type":"text"}],"type":"paragraph"},{"type":"codeListing","syntax":"swift","code":["\/\/ This expensive operation only runs if the log will be output","logger.debug(.network, \"Response: \\(expensiveJSONFormatting(data))\")"]},{"anchor":"Module-Level-Architecture","type":"heading","level":2,"text":"Module-Level Architecture"},{"inlineContent":[{"type":"text","text":"For modular applications, each module should:"}],"type":"paragraph"},{"type":"orderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Import only "},{"type":"codeVoice","code":"LoggerLibrary"},{"type":"text","text":" (the protocol)"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Define its own logging domains"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"Accept a "},{"type":"codeVoice","code":"Logger"},{"type":"text","text":" as a dependency"}],"type":"paragraph"}]}]},{"type":"codeListing","syntax":"swift","code":["\/\/ In NetworkingModule","import LoggerLibrary","","extension LoggerDomain {","    static let network: LoggerDomain = \"Network\"","}","","struct NetworkManager {","    let logger: Logger","","    func fetchData() {","        logger.info(.network, \"Fetching data...\")","    }","}"]},{"inlineContent":[{"text":"The app layer provides the concrete logger implementation:","type":"text"}],"type":"paragraph"},{"type":"codeListing","syntax":"swift","code":["\/\/ In App","import LoggerLibrary","import NetworkingModule","","let logger = DomainFilteredLogger(","    defaultLogLevel: .info,","    domainLogLevels: [.network: .debug]",")","","let networkManager = NetworkManager(logger: logger)"]},{"anchor":"Next-Steps","type":"heading","level":2,"text":"Next Steps"},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"Explore ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/LoggerLibrary\/documentation\/LoggerLibrary\/ArchitectureGuide"},{"text":" for advanced patterns","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Learn about creating custom loggers by conforming to "},{"type":"reference","identifier":"doc:\/\/LoggerLibrary\/documentation\/LoggerLibrary\/Logger","isActive":true}]}]},{"content":[{"inlineContent":[{"type":"text","text":"See "},{"identifier":"doc:\/\/LoggerLibrary\/documentation\/LoggerLibrary\/DomainFilteredLogger","isActive":true,"type":"reference"},{"type":"text","text":" for fine-grained control"}],"type":"paragraph"}]}]}],"kind":"content"}],"abstract":[{"type":"text","text":"Learn how to integrate LoggerLibrary into your Swift project and start logging."}],"identifier":{"url":"doc:\/\/LoggerLibrary\/documentation\/LoggerLibrary\/GettingStarted","interfaceLanguage":"swift"},"seeAlsoSections":[{"identifiers":["doc:\/\/LoggerLibrary\/documentation\/LoggerLibrary\/Logger","doc:\/\/LoggerLibrary\/documentation\/LoggerLibrary\/LoggerLevel","doc:\/\/LoggerLibrary\/documentation\/LoggerLibrary\/LoggerDomain"],"title":"Essentials","generated":true,"anchor":"Essentials"}],"sections":[],"schemaVersion":{"minor":3,"major":0,"patch":0},"metadata":{"modules":[{"name":"LoggerLibrary"}],"title":"Getting Started with LoggerLibrary","color":{"standardColorIdentifier":"orange"},"roleHeading":"Sample Code","role":"sampleCode"},"kind":"article","references":{"doc://LoggerLibrary/documentation/LoggerLibrary/Logger":{"title":"Logger","navigatorTitle":[{"kind":"identifier","text":"Logger"}],"url":"\/documentation\/loggerlibrary\/logger","abstract":[{"type":"text","text":"An protocol for writing interpolated string messages to the unified logging system."},{"type":"text","text":" "},{"type":"text","text":"corresponding to a log level."}],"role":"symbol","identifier":"doc:\/\/LoggerLibrary\/documentation\/LoggerLibrary\/Logger","type":"topic","kind":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"Logger"}]},"doc://LoggerLibrary/documentation/LoggerLibrary":{"title":"LoggerLibrary","type":"topic","kind":"symbol","url":"\/documentation\/loggerlibrary","identifier":"doc:\/\/LoggerLibrary\/documentation\/LoggerLibrary","abstract":[{"type":"text","text":"A lightweight, flexible logging framework with domain-based filtering for Swift applications."}],"role":"collection"},"doc://LoggerLibrary/documentation/LoggerLibrary/ArchitectureGuide":{"role":"article","url":"\/documentation\/loggerlibrary\/architectureguide","abstract":[{"type":"text","text":"Understand the protocol-first architecture and how to structure logging in modular applications."}],"type":"topic","identifier":"doc:\/\/LoggerLibrary\/documentation\/LoggerLibrary\/ArchitectureGuide","title":"Architecture Guide","kind":"article"},"doc://LoggerLibrary/documentation/LoggerLibrary/DomainFilteredLogger":{"role":"symbol","url":"\/documentation\/loggerlibrary\/domainfilteredlogger","type":"topic","title":"DomainFilteredLogger","identifier":"doc:\/\/LoggerLibrary\/documentation\/LoggerLibrary\/DomainFilteredLogger","kind":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"DomainFilteredLogger"}],"abstract":[{"type":"text","text":"A logger that outputs messages to the console with per-domain log level configuration."}],"navigatorTitle":[{"kind":"identifier","text":"DomainFilteredLogger"}]},"doc://LoggerLibrary/documentation/LoggerLibrary/LoggerDomain":{"kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"LoggerDomain","kind":"identifier"}],"abstract":[{"type":"text","text":"The domain shared by the logs originating from the same "},{"type":"reference","identifier":"doc:\/\/LoggerLibrary\/documentation\/LoggerLibrary\/Logger","isActive":true},{"type":"text","text":"."}],"url":"\/documentation\/loggerlibrary\/loggerdomain","role":"symbol","identifier":"doc:\/\/LoggerLibrary\/documentation\/LoggerLibrary\/LoggerDomain","title":"LoggerDomain","navigatorTitle":[{"text":"LoggerDomain","kind":"identifier"}],"type":"topic"},"doc://LoggerLibrary/documentation/LoggerLibrary/LoggerLevel":{"type":"topic","abstract":[{"type":"text","text":"An enumeration representing the various levels of logging supported by a logger instance."}],"fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"LoggerLevel","kind":"identifier"}],"url":"\/documentation\/loggerlibrary\/loggerlevel","role":"symbol","identifier":"doc:\/\/LoggerLibrary\/documentation\/LoggerLibrary\/LoggerLevel","kind":"symbol","title":"LoggerLevel","navigatorTitle":[{"text":"LoggerLevel","kind":"identifier"}]},"logo.png":{"type":"image","alt":"LoggerLibrary","identifier":"logo.png","variants":[{"traits":["1x","light"],"url":"\/images\/LoggerLibrary\/logo.png"}]}}}
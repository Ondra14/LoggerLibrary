{"hierarchy":{"paths":[["doc:\/\/LoggerLibrary\/documentation\/LoggerLibrary"]]},"primaryContentSections":[{"kind":"content","content":[{"level":2,"anchor":"Overview","type":"heading","text":"Overview"},{"type":"paragraph","inlineContent":[{"identifier":"logo.png","type":"image"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"This guide walks you through the basics of using LoggerLibrary in your application, from defining domains to choosing the right logger implementation."}]},{"level":2,"anchor":"Define-Your-Logging-Domains","type":"heading","text":"Define Your Logging Domains"},{"type":"paragraph","inlineContent":[{"text":"Start by defining the logging domains for your application. Each domain represents a distinct area or subsystem:","type":"text"}]},{"type":"codeListing","syntax":"swift","code":["import LoggerLibrary","","extension LoggerDomain {","    static let network: LoggerDomain = \"Network\"","    static let database: LoggerDomain = \"Database\"","    static let ui: LoggerDomain = \"UI\"","}"]},{"name":"Tip","type":"aside","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Define domains in each module as extensions, allowing the app layer to see all domains and configure logging centrally."}]}],"style":"tip"},{"level":2,"anchor":"Choose-a-Logger","type":"heading","text":"Choose a Logger"},{"type":"paragraph","inlineContent":[{"text":"LoggerLibrary provides three built-in logger implementations:","type":"text"}]},{"level":3,"anchor":"PrintLogger","type":"heading","text":"PrintLogger"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Simple console logging with a single log level threshold:"}]},{"type":"codeListing","syntax":"swift","code":["let logger = PrintLogger(logLevel: .info)","","logger.info(.network, \"Request started\")","logger.debug(.network, \"This won't be logged (below .info threshold)\")"]},{"type":"heading","level":3,"text":"DomainFilteredLogger","anchor":"DomainFilteredLogger"},{"type":"paragraph","inlineContent":[{"text":"Advanced logging with per-domain log level control:","type":"text"}]},{"type":"codeListing","syntax":"swift","code":["let logger = DomainFilteredLogger(","    defaultLogLevel: .warning,","    domainLogLevels: [","        .network: .debug,    \/\/ Verbose network logs","        .database: .info,    \/\/ Standard database logs","        .ui: .disabled       \/\/ No UI logs","    ]",")","","logger.debug(.network, \"Request headers: \\(headers)\")  \/\/ Logged","logger.info(.database, \"Query executed\")               \/\/ Logged","logger.error(.ui, \"View error\")                        \/\/ Not logged (disabled)"]},{"type":"heading","level":3,"text":"NoOpLogger","anchor":"NoOpLogger"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Discards all log messages, useful for tests:"}]},{"type":"codeListing","syntax":"swift","code":["let logger = NoOpLogger()","","logger.error(.network, \"This will be silently discarded\")"]},{"type":"heading","level":2,"text":"Log Messages","anchor":"Log-Messages"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Use convenience methods for common log levels:"}]},{"type":"codeListing","syntax":"swift","code":["logger.verbose(.network, \"Detailed trace information\")","logger.debug(.network, \"Debugging information\")","logger.info(.network, \"General information\")","logger.warning(.network, \"Warning condition\")","logger.error(.network, \"Error occurred\")"]},{"inlineContent":[{"type":"text","text":"Or use the core "},{"type":"codeVoice","code":"log(_:_:_:)"},{"type":"text","text":" method directly:"}],"type":"paragraph"},{"type":"codeListing","syntax":"swift","code":["logger.log(.info, .network, \"Custom log message\")"]},{"type":"heading","anchor":"Lazy-Evaluation","level":2,"text":"Lazy Evaluation"},{"inlineContent":[{"type":"text","text":"Message strings use "},{"type":"codeVoice","code":"@autoclosure"},{"type":"text","text":", ensuring theyâ€™re only evaluated when logged:"}],"type":"paragraph"},{"type":"codeListing","syntax":"swift","code":["\/\/ This expensive operation only runs if the log will be output","logger.debug(.network, \"Response: \\(expensiveJSONFormatting(data))\")"]},{"type":"heading","anchor":"Module-Level-Architecture","level":2,"text":"Module-Level Architecture"},{"inlineContent":[{"type":"text","text":"For modular applications, each module should:"}],"type":"paragraph"},{"type":"orderedList","items":[{"content":[{"inlineContent":[{"text":"Import only ","type":"text"},{"code":"LoggerLibrary","type":"codeVoice"},{"text":" (the protocol)","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Define its own logging domains"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"Accept a "},{"type":"codeVoice","code":"Logger"},{"type":"text","text":" as a dependency"}],"type":"paragraph"}]}]},{"type":"codeListing","syntax":"swift","code":["\/\/ In NetworkingModule","import LoggerLibrary","","extension LoggerDomain {","    static let network: LoggerDomain = \"Network\"","}","","struct NetworkManager {","    let logger: Logger","","    func fetchData() {","        logger.info(.network, \"Fetching data...\")","    }","}"]},{"inlineContent":[{"type":"text","text":"The app layer provides the concrete logger implementation:"}],"type":"paragraph"},{"type":"codeListing","syntax":"swift","code":["\/\/ In App","import LoggerLibrary","import NetworkingModule","","let logger = DomainFilteredLogger(","    defaultLogLevel: .info,","    domainLogLevels: [.network: .debug]",")","","let networkManager = NetworkManager(logger: logger)"]},{"type":"heading","anchor":"Next-Steps","level":2,"text":"Next Steps"},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"text":"Explore ","type":"text"},{"isActive":true,"identifier":"doc:\/\/LoggerLibrary\/documentation\/LoggerLibrary\/ArchitectureGuide","type":"reference"},{"text":" for advanced patterns","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Learn about creating custom loggers by conforming to "},{"isActive":true,"type":"reference","identifier":"doc:\/\/LoggerLibrary\/documentation\/LoggerLibrary\/Logger"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"See "},{"isActive":true,"type":"reference","identifier":"doc:\/\/LoggerLibrary\/documentation\/LoggerLibrary\/DomainFilteredLogger"},{"type":"text","text":" for fine-grained control"}],"type":"paragraph"}]}]}]}],"identifier":{"url":"doc:\/\/LoggerLibrary\/documentation\/LoggerLibrary\/GettingStarted","interfaceLanguage":"swift"},"abstract":[{"text":"Learn how to integrate LoggerLibrary into your Swift project and start logging.","type":"text"}],"seeAlsoSections":[{"anchor":"Essentials","title":"Essentials","generated":true,"identifiers":["doc:\/\/LoggerLibrary\/documentation\/LoggerLibrary\/Logger","doc:\/\/LoggerLibrary\/documentation\/LoggerLibrary\/LoggerLevel","doc:\/\/LoggerLibrary\/documentation\/LoggerLibrary\/LoggerDomain"]}],"schemaVersion":{"patch":0,"major":0,"minor":3},"kind":"article","sections":[],"variants":[{"paths":["\/documentation\/loggerlibrary\/gettingstarted"],"traits":[{"interfaceLanguage":"swift"}]}],"metadata":{"roleHeading":"Sample Code","title":"Getting Started with LoggerLibrary","role":"sampleCode","modules":[{"name":"LoggerLibrary"}],"color":{"standardColorIdentifier":"orange"}},"references":{"doc://LoggerLibrary/documentation/LoggerLibrary/DomainFilteredLogger":{"kind":"symbol","abstract":[{"type":"text","text":"A logger that outputs messages to the console with per-domain log level configuration."}],"identifier":"doc:\/\/LoggerLibrary\/documentation\/LoggerLibrary\/DomainFilteredLogger","title":"DomainFilteredLogger","url":"\/documentation\/loggerlibrary\/domainfilteredlogger","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"DomainFilteredLogger"}],"type":"topic","navigatorTitle":[{"kind":"identifier","text":"DomainFilteredLogger"}],"role":"symbol"},"doc://LoggerLibrary/documentation/LoggerLibrary":{"kind":"symbol","title":"LoggerLibrary","role":"collection","type":"topic","identifier":"doc:\/\/LoggerLibrary\/documentation\/LoggerLibrary","url":"\/documentation\/loggerlibrary","abstract":[{"type":"text","text":"A lightweight, flexible logging framework with domain-based filtering for Swift applications."}]},"doc://LoggerLibrary/documentation/LoggerLibrary/ArchitectureGuide":{"role":"article","identifier":"doc:\/\/LoggerLibrary\/documentation\/LoggerLibrary\/ArchitectureGuide","url":"\/documentation\/loggerlibrary\/architectureguide","abstract":[{"type":"text","text":"Understand the protocol-first architecture and how to structure logging in modular applications."}],"kind":"article","type":"topic","title":"Architecture Guide"},"doc://LoggerLibrary/documentation/LoggerLibrary/LoggerDomain":{"title":"LoggerDomain","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"LoggerDomain","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/LoggerLibrary\/documentation\/LoggerLibrary\/LoggerDomain","url":"\/documentation\/loggerlibrary\/loggerdomain","role":"symbol","abstract":[{"type":"text","text":"The domain shared by the logs originating from the same "},{"identifier":"doc:\/\/LoggerLibrary\/documentation\/LoggerLibrary\/Logger","type":"reference","isActive":true},{"type":"text","text":"."}],"navigatorTitle":[{"text":"LoggerDomain","kind":"identifier"}],"kind":"symbol"},"doc://LoggerLibrary/documentation/LoggerLibrary/LoggerLevel":{"abstract":[{"text":"An enumeration representing the various levels of logging supported by a logger instance.","type":"text"}],"fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"LoggerLevel"}],"identifier":"doc:\/\/LoggerLibrary\/documentation\/LoggerLibrary\/LoggerLevel","role":"symbol","url":"\/documentation\/loggerlibrary\/loggerlevel","navigatorTitle":[{"kind":"identifier","text":"LoggerLevel"}],"type":"topic","title":"LoggerLevel","kind":"symbol"},"logo.png":{"type":"image","identifier":"logo.png","variants":[{"traits":["1x","light"],"url":"\/images\/LoggerLibrary\/logo.png"}],"alt":"LoggerLibrary"},"doc://LoggerLibrary/documentation/LoggerLibrary/Logger":{"identifier":"doc:\/\/LoggerLibrary\/documentation\/LoggerLibrary\/Logger","role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Logger","kind":"identifier"}],"title":"Logger","navigatorTitle":[{"text":"Logger","kind":"identifier"}],"url":"\/documentation\/loggerlibrary\/logger","abstract":[{"text":"An protocol for writing interpolated string messages to the unified logging system.","type":"text"},{"text":" ","type":"text"},{"text":"corresponding to a log level.","type":"text"}],"kind":"symbol","type":"topic"}}}
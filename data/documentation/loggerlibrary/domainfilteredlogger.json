{"hierarchy":{"paths":[["doc:\/\/LoggerLibrary\/documentation\/LoggerLibrary"]]},"metadata":{"symbolKind":"struct","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"DomainFilteredLogger"}],"modules":[{"name":"LoggerLibrary"}],"roleHeading":"Structure","title":"DomainFilteredLogger","navigatorTitle":[{"text":"DomainFilteredLogger","kind":"identifier"}],"externalID":"s:13LoggerLibrary014DomainFilteredA0V","role":"symbol"},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/LoggerLibrary\/documentation\/LoggerLibrary\/DomainFilteredLogger"},"kind":"symbol","abstract":[{"text":"A logger that outputs messages to the console with per-domain log level configuration.","type":"text"}],"relationshipsSections":[{"title":"Conforms To","identifiers":["doc:\/\/LoggerLibrary\/documentation\/LoggerLibrary\/Logger","doc:\/\/LoggerLibrary\/s8SendableP"],"type":"conformsTo","kind":"relationships"}],"seeAlsoSections":[{"title":"Logger Implementations","identifiers":["doc:\/\/LoggerLibrary\/documentation\/LoggerLibrary\/PrintLogger-swift.struct","doc:\/\/LoggerLibrary\/documentation\/LoggerLibrary\/NoOpLogger"],"anchor":"Logger-Implementations","generated":true}],"sections":[],"topicSections":[{"title":"Initializers","identifiers":["doc:\/\/LoggerLibrary\/documentation\/LoggerLibrary\/DomainFilteredLogger\/init(defaultLogLevel:domainLogLevels:)"],"anchor":"Initializers","generated":true},{"title":"Instance Properties","identifiers":["doc:\/\/LoggerLibrary\/documentation\/LoggerLibrary\/DomainFilteredLogger\/defaultLogLevel","doc:\/\/LoggerLibrary\/documentation\/LoggerLibrary\/DomainFilteredLogger\/domainLogLevels"],"anchor":"Instance-Properties","generated":true},{"title":"Instance Methods","identifiers":["doc:\/\/LoggerLibrary\/documentation\/LoggerLibrary\/DomainFilteredLogger\/log(_:_:_:)"],"anchor":"Instance-Methods","generated":true},{"title":"Default Implementations","identifiers":["doc:\/\/LoggerLibrary\/documentation\/LoggerLibrary\/DomainFilteredLogger\/Logger-Implementations"],"anchor":"Default-Implementations","generated":true}],"variants":[{"paths":["\/documentation\/loggerlibrary\/domainfilteredlogger"],"traits":[{"interfaceLanguage":"swift"}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"primaryContentSections":[{"declarations":[{"tokens":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"DomainFilteredLogger","kind":"identifier"}],"platforms":["macOS"],"languages":["swift"]}],"kind":"declarations"},{"kind":"content","content":[{"level":2,"anchor":"overview","type":"heading","text":"Overview"},{"type":"paragraph","inlineContent":[{"type":"text","text":"This logger allows you to specify different log levels for different domains,"},{"type":"text","text":" "},{"type":"text","text":"giving you fine-grained control over logging output. This is particularly useful"},{"type":"text","text":" "},{"type":"text","text":"when debugging specific parts of your application without being overwhelmed by"},{"type":"text","text":" "},{"type":"text","text":"logs from other components."}]},{"level":2,"anchor":"Overview","type":"heading","text":"Overview"},{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"DomainFilteredLogger"},{"text":" extends the basic console logging functionality by allowing","type":"text"},{"text":" ","type":"text"},{"text":"you to configure individual log levels for each domain. Domains not specified in the","type":"text"},{"text":" ","type":"text"},{"text":"dictionary use the ","type":"text"},{"type":"codeVoice","code":"defaultLogLevel"},{"text":".","type":"text"}]},{"level":3,"anchor":"How-It-Works","type":"heading","text":"How It Works"},{"type":"orderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Each log message is associated with a domain (e.g., "},{"type":"codeVoice","code":".network"},{"type":"text","text":", "},{"type":"codeVoice","code":".database"},{"type":"text","text":")"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"If the domain exists in "},{"type":"codeVoice","code":"domainLogLevels"},{"type":"text","text":", that level is used (overrides default)"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"If the domain is not in the dictionary, ","type":"text"},{"code":"defaultLogLevel","type":"codeVoice"},{"text":" is used","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The message is logged only if its level meets or exceeds the domainâ€™s threshold"}]}]}]},{"level":2,"anchor":"Usage-Examples","type":"heading","text":"Usage Examples"},{"level":3,"anchor":"Example-1-Debugging-Network-Communication","type":"heading","text":"Example 1: Debugging Network Communication"},{"syntax":"swift","code":["\/\/ Define common log domains by extending `LoggerDomain`:","public extension LoggerDomain {","    static let app: LoggerDomain = \"App\"","    static let network: LoggerDomain = \"Network\"","    static let database: LoggerDomain = \"Database\"","    static let location: LoggerDomain = \"Location\"","}","","\/\/ Focus on network domains while keeping other logs at info level","let logger = DomainFilteredLogger(","    defaultLogLevel: .info,","    domainLogLevels: [","        \/\/ Detailed network debugging","        .network: .debug,","","        \/\/ Suppress noisy domains","        .location: .disabled,","    ]",")","","\/\/ This will be logged (debug level meets .debug threshold)","logger.log(.debug, .network, \"Received HTTP response\")","","\/\/ This will be logged (info level meets .info default threshold)","logger.log(.info, .database, \"Database opened\")","","\/\/ This will NOT be logged (location is disabled)","logger.log(.error, .location, \"Failed to resolve location\")"],"type":"codeListing"},{"level":3,"anchor":"Example-2-Production-Configuration","type":"heading","text":"Example 2: Production Configuration"},{"syntax":"swift","code":["\/\/ Only log warnings and errors in production","let logger = DomainFilteredLogger(","    defaultLogLevel: .warning,","    domainLogLevels: [:] \/\/ Empty dictionary = use default for all domains",")","","\/\/ This will NOT be logged (debug < warning threshold)","logger.log(.debug, .network, \"Processing request\")","","\/\/ This WILL be logged (error >= warning threshold)","logger.log(.error, .database, \"Connection failed\")"],"type":"codeListing"},{"level":3,"anchor":"Example-3-Mixed-Debug-Levels","type":"heading","text":"Example 3: Mixed Debug Levels"},{"syntax":"swift","code":["\/\/ Different debug levels for different subsystems","let logger = DomainFilteredLogger(","    defaultLogLevel: .disabled, \/\/ Disable all by default","    domainLogLevels: [","        .network: .debug,      \/\/ Maximum detail for network","        .database: .info,      \/\/ Basic info for database","        .app: .error,          \/\/ Only errors for app","    ]",")"],"type":"codeListing"},{"level":2,"anchor":"Available-Log-Levels","type":"heading","text":"Available Log Levels"},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"code":".disabled","type":"codeVoice"},{"text":" - No logging for this domain","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":".verbose"},{"type":"text","text":" - Most detailed logging"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":".debug"},{"text":" - Detailed debug messages","type":"text"}]}]},{"content":[{"inlineContent":[{"type":"codeVoice","code":".info"},{"type":"text","text":" - Informational messages"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":".warning"},{"text":" - Warnings and errors","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":".error"},{"type":"text","text":" - Only critical errors"}]}]}]},{"level":2,"anchor":"Configuration-in-TCA","type":"heading","text":"Configuration in TCA"},{"syntax":"swift","code":["let store = Store(initialState: App.State()) {","    App()","} withDependencies: { dependencies in","    dependencies.logger = DomainFilteredLogger(","        defaultLogLevel: .info,","        domainLogLevels: [","            .network: .debug,","            .database: .debug,","        ]","    )","}"],"type":"codeListing"},{"level":2,"anchor":"Performance-Note","type":"heading","text":"Performance Note"},{"type":"paragraph","inlineContent":[{"text":"The ","type":"text"},{"type":"codeVoice","code":"message"},{"text":" parameter uses ","type":"text"},{"type":"codeVoice","code":"@autoclosure"},{"text":", meaning the message string is only","type":"text"},{"text":" ","type":"text"},{"text":"evaluated if the log will actually be output. This ensures efficient logging even","type":"text"},{"text":" ","type":"text"},{"text":"with expensive string operations.","type":"text"}]}]}],"references":{"doc://LoggerLibrary/documentation/LoggerLibrary/DomainFilteredLogger/Logger-Implementations":{"kind":"article","title":"Logger Implementations","abstract":[],"url":"\/documentation\/loggerlibrary\/domainfilteredlogger\/logger-implementations","type":"topic","role":"collectionGroup","identifier":"doc:\/\/LoggerLibrary\/documentation\/LoggerLibrary\/DomainFilteredLogger\/Logger-Implementations"},"doc://LoggerLibrary/s8SendableP":{"type":"unresolvable","title":"Swift.Sendable","identifier":"doc:\/\/LoggerLibrary\/s8SendableP"},"doc://LoggerLibrary/documentation/LoggerLibrary/PrintLogger-swift.struct":{"type":"topic","title":"PrintLogger","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"PrintLogger","kind":"identifier"}],"abstract":[{"type":"text","text":"A logger that outputs messages to the console."}],"navigatorTitle":[{"text":"PrintLogger","kind":"identifier"}],"kind":"symbol","url":"\/documentation\/loggerlibrary\/printlogger-swift.struct","identifier":"doc:\/\/LoggerLibrary\/documentation\/LoggerLibrary\/PrintLogger-swift.struct","role":"symbol"},"doc://LoggerLibrary/documentation/LoggerLibrary/DomainFilteredLogger/defaultLogLevel":{"identifier":"doc:\/\/LoggerLibrary\/documentation\/LoggerLibrary\/DomainFilteredLogger\/defaultLogLevel","role":"symbol","url":"\/documentation\/loggerlibrary\/domainfilteredlogger\/defaultloglevel","type":"topic","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"defaultLogLevel","kind":"identifier"},{"text":": ","kind":"text"},{"text":"LoggerLevel","preciseIdentifier":"s:13LoggerLibrary0A5LevelO","kind":"typeIdentifier"}],"title":"defaultLogLevel","kind":"symbol","abstract":[{"type":"text","text":"The default log level for domains not specified in domainLogLevels."}]},"doc://LoggerLibrary/documentation/LoggerLibrary/DomainFilteredLogger/domainLogLevels":{"abstract":[{"type":"text","text":"Dictionary mapping domains to their specific log levels."},{"type":"text","text":" "},{"type":"text","text":"If a domain is not in this dictionary, defaultLogLevel is used."}],"role":"symbol","identifier":"doc:\/\/LoggerLibrary\/documentation\/LoggerLibrary\/DomainFilteredLogger\/domainLogLevels","title":"domainLogLevels","url":"\/documentation\/loggerlibrary\/domainfilteredlogger\/domainloglevels","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"domainLogLevels","kind":"identifier"},{"text":": [","kind":"text"},{"text":"LoggerDomain","preciseIdentifier":"s:13LoggerLibrary0A6DomainV","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"text":"LoggerLevel","preciseIdentifier":"s:13LoggerLibrary0A5LevelO","kind":"typeIdentifier"},{"text":"]","kind":"text"}],"kind":"symbol","type":"topic"},"doc://LoggerLibrary/documentation/LoggerLibrary/DomainFilteredLogger":{"kind":"symbol","abstract":[{"type":"text","text":"A logger that outputs messages to the console with per-domain log level configuration."}],"identifier":"doc:\/\/LoggerLibrary\/documentation\/LoggerLibrary\/DomainFilteredLogger","title":"DomainFilteredLogger","url":"\/documentation\/loggerlibrary\/domainfilteredlogger","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"DomainFilteredLogger"}],"type":"topic","navigatorTitle":[{"kind":"identifier","text":"DomainFilteredLogger"}],"role":"symbol"},"doc://LoggerLibrary/documentation/LoggerLibrary":{"kind":"symbol","title":"LoggerLibrary","role":"collection","type":"topic","identifier":"doc:\/\/LoggerLibrary\/documentation\/LoggerLibrary","url":"\/documentation\/loggerlibrary","abstract":[{"type":"text","text":"A lightweight, flexible logging framework with domain-based filtering for Swift applications."}]},"doc://LoggerLibrary/documentation/LoggerLibrary/DomainFilteredLogger/init(defaultLogLevel:domainLogLevels:)":{"abstract":[{"text":"Initializes a new ","type":"text"},{"code":"DomainFilteredLogger","type":"codeVoice"},{"text":" with per-domain log levels.","type":"text"}],"type":"topic","role":"symbol","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"defaultLogLevel"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"LoggerLevel","preciseIdentifier":"s:13LoggerLibrary0A5LevelO"},{"kind":"text","text":", "},{"kind":"externalParam","text":"domainLogLevels"},{"kind":"text","text":": ["},{"kind":"typeIdentifier","text":"LoggerDomain","preciseIdentifier":"s:13LoggerLibrary0A6DomainV"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","text":"LoggerLevel","preciseIdentifier":"s:13LoggerLibrary0A5LevelO"},{"kind":"text","text":"])"}],"kind":"symbol","url":"\/documentation\/loggerlibrary\/domainfilteredlogger\/init(defaultloglevel:domainloglevels:)","identifier":"doc:\/\/LoggerLibrary\/documentation\/LoggerLibrary\/DomainFilteredLogger\/init(defaultLogLevel:domainLogLevels:)","title":"init(defaultLogLevel:domainLogLevels:)"},"doc://LoggerLibrary/documentation/LoggerLibrary/Logger":{"identifier":"doc:\/\/LoggerLibrary\/documentation\/LoggerLibrary\/Logger","role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Logger","kind":"identifier"}],"title":"Logger","navigatorTitle":[{"text":"Logger","kind":"identifier"}],"url":"\/documentation\/loggerlibrary\/logger","abstract":[{"text":"An protocol for writing interpolated string messages to the unified logging system.","type":"text"},{"text":" ","type":"text"},{"text":"corresponding to a log level.","type":"text"}],"kind":"symbol","type":"topic"},"doc://LoggerLibrary/documentation/LoggerLibrary/DomainFilteredLogger/log(_:_:_:)":{"kind":"symbol","type":"topic","title":"log(_:_:_:)","identifier":"doc:\/\/LoggerLibrary\/documentation\/LoggerLibrary\/DomainFilteredLogger\/log(_:_:_:)","role":"symbol","url":"\/documentation\/loggerlibrary\/domainfilteredlogger\/log(_:_:_:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"log","kind":"identifier"},{"text":"(","kind":"text"},{"text":"LoggerLevel","kind":"typeIdentifier","preciseIdentifier":"s:13LoggerLibrary0A5LevelO"},{"text":", ","kind":"text"},{"text":"LoggerDomain","kind":"typeIdentifier","preciseIdentifier":"s:13LoggerLibrary0A6DomainV"},{"text":", ","kind":"text"},{"text":"@autoclosure ","kind":"attribute"},{"text":"() -> ","kind":"text"},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"text":")","kind":"text"}],"abstract":[{"text":"Logs a message to the console if the log level is above the threshold","type":"text"},{"text":" ","type":"text"},{"text":"configured for this specific domain.","type":"text"}]},"doc://LoggerLibrary/documentation/LoggerLibrary/NoOpLogger":{"url":"\/documentation\/loggerlibrary\/nooplogger","kind":"symbol","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"NoOpLogger","kind":"identifier"}],"type":"topic","abstract":[{"text":"A no-operation logger that discards all log messages.","type":"text"}],"title":"NoOpLogger","identifier":"doc:\/\/LoggerLibrary\/documentation\/LoggerLibrary\/NoOpLogger","navigatorTitle":[{"text":"NoOpLogger","kind":"identifier"}]}}}